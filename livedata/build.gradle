apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: "com.hiya.jacoco-android"

group = 'com.github.getstream'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "0.8.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildFeatures {
        dataBinding true
    }
    testOptions.unitTests {
        includeAndroidResources = true
        all {
            testLogging {
                events 'failed', 'standardOut', 'standardError'
                showExceptions true
                showCauses true
                showStackTraces true
                exceptionFormat 'full'
            }
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    dokka {
        outputFormat = 'html'
        outputDirectory = "$rootDir/docs"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlinX'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "com.github.getstream:stream-chat-android-client:1.16.6"


    def room_version = "2.2.5"
    def work_version = "2.4.0"
    def jupiter_version = "5.6.2"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.test:core:1.2.0"
    implementation "com.google.firebase:firebase-messaging:20.2.4"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01"
    implementation "androidx.security:security-crypto:1.1.0-alpha02"

    testImplementation 'androidx.benchmark:benchmark-junit4:1.0.0'
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "io.github.cdimascio:java-dotenv:5.1.4"
    testImplementation "androidx.recyclerview:recyclerview:1.1.0"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "androidx.test.ext:junit:1.1.2"
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "androidx.test:core-ktx:1.3.0"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation "org.mockito:mockito-core:3.4.6"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.amshove.kluent:kluent:1.61"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.8"
    testImplementation "androidx.work:work-testing:$work_version"
    testImplementation "junit:junit:4.13"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"

    androidTestImplementation "junit:junit:4.13"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$jupiter_version"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "org.mockito:mockito-core:3.4.6"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "org.amshove.kluent:kluent:1.61"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    // Creates a Maven publication which can be used to test livedata artifact locally.
    // By default the publication is stored into ~/.m2 directory.
    // 1. To release a local publication run `./gradlew publishToMavenLocal`
    // 2. To use it add mavenLocal() into target project's repositories list.
    publishing {
        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant
                from components.release
                // Adds sources as separate jars.
                artifact androidSourcesJar
                // Custom attributes of the publication
                groupId = project.group
                artifactId = 'stream-chat-android-livedata'
                version = '0.8.6-SNAPSHOT'
            }
        }
    }
}
